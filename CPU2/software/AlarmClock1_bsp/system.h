/*
 * system.h - SOPC Builder system and BSP software package information
 *
 * Machine generated for CPU 'NIOSII' in SOPC Builder design 'AlarmClockHDL'
 * SOPC Builder design path: ../../AlarmClockHDL.sopcinfo
 *
 * Generated: Thu Aug 15 23:49:17 CST 2024
 */

/*
 * DO NOT MODIFY THIS FILE
 *
 * Changing this file will have subtle consequences
 * which will almost certainly lead to a nonfunctioning
 * system. If you do modify this file, be aware that your
 * changes will be overwritten and lost when this file
 * is generated again.
 *
 * DO NOT MODIFY THIS FILE
 */

/*
 * License Agreement
 *
 * Copyright (c) 2008
 * Altera Corporation, San Jose, California, USA.
 * All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * This agreement shall be governed in all respects by the laws of the State
 * of California and by the laws of the United States of America.
 */

#ifndef __SYSTEM_H_
#define __SYSTEM_H_

/* Include definitions from linker script generator */
#include "linker.h"


/*
 * ALARM1 configuration
 *
 */

#define ALARM1_BASE 0x21060
#define ALARM1_BIT_CLEARING_EDGE_REGISTER 0
#define ALARM1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define ALARM1_CAPTURE 0
#define ALARM1_DATA_WIDTH 1
#define ALARM1_DO_TEST_BENCH_WIRING 0
#define ALARM1_DRIVEN_SIM_VALUE 0
#define ALARM1_EDGE_TYPE "NONE"
#define ALARM1_FREQ 50000000
#define ALARM1_HAS_IN 1
#define ALARM1_HAS_OUT 0
#define ALARM1_HAS_TRI 0
#define ALARM1_IRQ -1
#define ALARM1_IRQ_INTERRUPT_CONTROLLER_ID -1
#define ALARM1_IRQ_TYPE "NONE"
#define ALARM1_NAME "/dev/ALARM1"
#define ALARM1_RESET_VALUE 0
#define ALARM1_SPAN 16
#define ALARM1_TYPE "altera_avalon_pio"
#define ALT_MODULE_CLASS_ALARM1 altera_avalon_pio


/*
 * BUTTON1 configuration
 *
 */

#define ALT_MODULE_CLASS_BUTTON1 altera_avalon_pio
#define BUTTON1_BASE 0x21020
#define BUTTON1_BIT_CLEARING_EDGE_REGISTER 0
#define BUTTON1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON1_CAPTURE 0
#define BUTTON1_DATA_WIDTH 1
#define BUTTON1_DO_TEST_BENCH_WIRING 0
#define BUTTON1_DRIVEN_SIM_VALUE 0
#define BUTTON1_EDGE_TYPE "NONE"
#define BUTTON1_FREQ 50000000
#define BUTTON1_HAS_IN 1
#define BUTTON1_HAS_OUT 0
#define BUTTON1_HAS_TRI 0
#define BUTTON1_IRQ -1
#define BUTTON1_IRQ_INTERRUPT_CONTROLLER_ID -1
#define BUTTON1_IRQ_TYPE "NONE"
#define BUTTON1_NAME "/dev/BUTTON1"
#define BUTTON1_RESET_VALUE 0
#define BUTTON1_SPAN 16
#define BUTTON1_TYPE "altera_avalon_pio"


/*
 * BUTTON2 configuration
 *
 */

#define ALT_MODULE_CLASS_BUTTON2 altera_avalon_pio
#define BUTTON2_BASE 0x21030
#define BUTTON2_BIT_CLEARING_EDGE_REGISTER 0
#define BUTTON2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON2_CAPTURE 0
#define BUTTON2_DATA_WIDTH 1
#define BUTTON2_DO_TEST_BENCH_WIRING 0
#define BUTTON2_DRIVEN_SIM_VALUE 0
#define BUTTON2_EDGE_TYPE "NONE"
#define BUTTON2_FREQ 50000000
#define BUTTON2_HAS_IN 1
#define BUTTON2_HAS_OUT 0
#define BUTTON2_HAS_TRI 0
#define BUTTON2_IRQ -1
#define BUTTON2_IRQ_INTERRUPT_CONTROLLER_ID -1
#define BUTTON2_IRQ_TYPE "NONE"
#define BUTTON2_NAME "/dev/BUTTON2"
#define BUTTON2_RESET_VALUE 0
#define BUTTON2_SPAN 16
#define BUTTON2_TYPE "altera_avalon_pio"


/*
 * BUTTON3 configuration
 *
 */

#define ALT_MODULE_CLASS_BUTTON3 altera_avalon_pio
#define BUTTON3_BASE 0x21040
#define BUTTON3_BIT_CLEARING_EDGE_REGISTER 0
#define BUTTON3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON3_CAPTURE 0
#define BUTTON3_DATA_WIDTH 1
#define BUTTON3_DO_TEST_BENCH_WIRING 0
#define BUTTON3_DRIVEN_SIM_VALUE 0
#define BUTTON3_EDGE_TYPE "NONE"
#define BUTTON3_FREQ 50000000
#define BUTTON3_HAS_IN 1
#define BUTTON3_HAS_OUT 0
#define BUTTON3_HAS_TRI 0
#define BUTTON3_IRQ -1
#define BUTTON3_IRQ_INTERRUPT_CONTROLLER_ID -1
#define BUTTON3_IRQ_TYPE "NONE"
#define BUTTON3_NAME "/dev/BUTTON3"
#define BUTTON3_RESET_VALUE 0
#define BUTTON3_SPAN 16
#define BUTTON3_TYPE "altera_avalon_pio"


/*
 * BUTTON4 configuration
 *
 */

#define ALT_MODULE_CLASS_BUTTON4 altera_avalon_pio
#define BUTTON4_BASE 0x21050
#define BUTTON4_BIT_CLEARING_EDGE_REGISTER 0
#define BUTTON4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON4_CAPTURE 0
#define BUTTON4_DATA_WIDTH 1
#define BUTTON4_DO_TEST_BENCH_WIRING 0
#define BUTTON4_DRIVEN_SIM_VALUE 0
#define BUTTON4_EDGE_TYPE "NONE"
#define BUTTON4_FREQ 50000000
#define BUTTON4_HAS_IN 1
#define BUTTON4_HAS_OUT 0
#define BUTTON4_HAS_TRI 0
#define BUTTON4_IRQ -1
#define BUTTON4_IRQ_INTERRUPT_CONTROLLER_ID -1
#define BUTTON4_IRQ_TYPE "NONE"
#define BUTTON4_NAME "/dev/BUTTON4"
#define BUTTON4_RESET_VALUE 0
#define BUTTON4_SPAN 16
#define BUTTON4_TYPE "altera_avalon_pio"


/*
 * BUZZ configuration
 *
 */

#define ALT_MODULE_CLASS_BUZZ altera_avalon_pio
#define BUZZ_BASE 0x21070
#define BUZZ_BIT_CLEARING_EDGE_REGISTER 0
#define BUZZ_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUZZ_CAPTURE 0
#define BUZZ_DATA_WIDTH 2
#define BUZZ_DO_TEST_BENCH_WIRING 0
#define BUZZ_DRIVEN_SIM_VALUE 0
#define BUZZ_EDGE_TYPE "NONE"
#define BUZZ_FREQ 50000000
#define BUZZ_HAS_IN 0
#define BUZZ_HAS_OUT 1
#define BUZZ_HAS_TRI 0
#define BUZZ_IRQ -1
#define BUZZ_IRQ_INTERRUPT_CONTROLLER_ID -1
#define BUZZ_IRQ_TYPE "NONE"
#define BUZZ_NAME "/dev/BUZZ"
#define BUZZ_RESET_VALUE 0
#define BUZZ_SPAN 16
#define BUZZ_TYPE "altera_avalon_pio"


/*
 * CPU configuration
 *
 */

#define ALT_CPU_ARCHITECTURE "altera_nios2_gen2"
#define ALT_CPU_BIG_ENDIAN 0
#define ALT_CPU_BREAK_ADDR 0x00020820
#define ALT_CPU_CPU_ARCH_NIOS2_R1
#define ALT_CPU_CPU_FREQ 50000000u
#define ALT_CPU_CPU_ID_SIZE 1
#define ALT_CPU_CPU_ID_VALUE 0x00000000
#define ALT_CPU_CPU_IMPLEMENTATION "tiny"
#define ALT_CPU_DATA_ADDR_WIDTH 0x12
#define ALT_CPU_DCACHE_LINE_SIZE 0
#define ALT_CPU_DCACHE_LINE_SIZE_LOG2 0
#define ALT_CPU_DCACHE_SIZE 0
#define ALT_CPU_EXCEPTION_ADDR 0x00010020
#define ALT_CPU_FLASH_ACCELERATOR_LINES 0
#define ALT_CPU_FLASH_ACCELERATOR_LINE_SIZE 0
#define ALT_CPU_FLUSHDA_SUPPORTED
#define ALT_CPU_FREQ 50000000
#define ALT_CPU_HARDWARE_DIVIDE_PRESENT 0
#define ALT_CPU_HARDWARE_MULTIPLY_PRESENT 0
#define ALT_CPU_HARDWARE_MULX_PRESENT 0
#define ALT_CPU_HAS_DEBUG_CORE 1
#define ALT_CPU_HAS_DEBUG_STUB
#define ALT_CPU_HAS_ILLEGAL_INSTRUCTION_EXCEPTION
#define ALT_CPU_HAS_JMPI_INSTRUCTION
#define ALT_CPU_ICACHE_LINE_SIZE 0
#define ALT_CPU_ICACHE_LINE_SIZE_LOG2 0
#define ALT_CPU_ICACHE_SIZE 0
#define ALT_CPU_INST_ADDR_WIDTH 0x12
#define ALT_CPU_NAME "NIOSII"
#define ALT_CPU_OCI_VERSION 1
#define ALT_CPU_RESET_ADDR 0x00010000


/*
 * CPU configuration (with legacy prefix - don't use these anymore)
 *
 */

#define NIOS2_BIG_ENDIAN 0
#define NIOS2_BREAK_ADDR 0x00020820
#define NIOS2_CPU_ARCH_NIOS2_R1
#define NIOS2_CPU_FREQ 50000000u
#define NIOS2_CPU_ID_SIZE 1
#define NIOS2_CPU_ID_VALUE 0x00000000
#define NIOS2_CPU_IMPLEMENTATION "tiny"
#define NIOS2_DATA_ADDR_WIDTH 0x12
#define NIOS2_DCACHE_LINE_SIZE 0
#define NIOS2_DCACHE_LINE_SIZE_LOG2 0
#define NIOS2_DCACHE_SIZE 0
#define NIOS2_EXCEPTION_ADDR 0x00010020
#define NIOS2_FLASH_ACCELERATOR_LINES 0
#define NIOS2_FLASH_ACCELERATOR_LINE_SIZE 0
#define NIOS2_FLUSHDA_SUPPORTED
#define NIOS2_HARDWARE_DIVIDE_PRESENT 0
#define NIOS2_HARDWARE_MULTIPLY_PRESENT 0
#define NIOS2_HARDWARE_MULX_PRESENT 0
#define NIOS2_HAS_DEBUG_CORE 1
#define NIOS2_HAS_DEBUG_STUB
#define NIOS2_HAS_ILLEGAL_INSTRUCTION_EXCEPTION
#define NIOS2_HAS_JMPI_INSTRUCTION
#define NIOS2_ICACHE_LINE_SIZE 0
#define NIOS2_ICACHE_LINE_SIZE_LOG2 0
#define NIOS2_ICACHE_SIZE 0
#define NIOS2_INST_ADDR_WIDTH 0x12
#define NIOS2_OCI_VERSION 1
#define NIOS2_RESET_ADDR 0x00010000


/*
 * Define for each module class mastered by the CPU
 *
 */

#define __ALTERA_AVALON_JTAG_UART
#define __ALTERA_AVALON_ONCHIP_MEMORY2
#define __ALTERA_AVALON_PIO
#define __ALTERA_AVALON_TIMER
#define __ALTERA_NIOS2_GEN2


/*
 * JTAG configuration
 *
 */

#define ALT_MODULE_CLASS_JTAG altera_avalon_jtag_uart
#define JTAG_BASE 0x210c8
#define JTAG_IRQ 0
#define JTAG_IRQ_INTERRUPT_CONTROLLER_ID 0
#define JTAG_NAME "/dev/JTAG"
#define JTAG_READ_DEPTH 64
#define JTAG_READ_THRESHOLD 8
#define JTAG_SPAN 8
#define JTAG_TYPE "altera_avalon_jtag_uart"
#define JTAG_WRITE_DEPTH 64
#define JTAG_WRITE_THRESHOLD 8


/*
 * ONCHIPRAM configuration
 *
 */

#define ALT_MODULE_CLASS_ONCHIPRAM altera_avalon_onchip_memory2
#define ONCHIPRAM_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ONCHIPRAM_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ONCHIPRAM_BASE 0x10000
#define ONCHIPRAM_CONTENTS_INFO ""
#define ONCHIPRAM_DUAL_PORT 0
#define ONCHIPRAM_GUI_RAM_BLOCK_TYPE "AUTO"
#define ONCHIPRAM_INIT_CONTENTS_FILE "AlarmClockHDL_ONCHIPRAM"
#define ONCHIPRAM_INIT_MEM_CONTENT 1
#define ONCHIPRAM_INSTANCE_ID "NONE"
#define ONCHIPRAM_IRQ -1
#define ONCHIPRAM_IRQ_INTERRUPT_CONTROLLER_ID -1
#define ONCHIPRAM_NAME "/dev/ONCHIPRAM"
#define ONCHIPRAM_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ONCHIPRAM_RAM_BLOCK_TYPE "AUTO"
#define ONCHIPRAM_READ_DURING_WRITE_MODE "DONT_CARE"
#define ONCHIPRAM_SINGLE_CLOCK_OP 0
#define ONCHIPRAM_SIZE_MULTIPLE 1
#define ONCHIPRAM_SIZE_VALUE 40960
#define ONCHIPRAM_SPAN 40960
#define ONCHIPRAM_TYPE "altera_avalon_onchip_memory2"
#define ONCHIPRAM_WRITABLE 1


/*
 * SEGMENT1 configuration
 *
 */

#define ALT_MODULE_CLASS_SEGMENT1 altera_avalon_pio
#define SEGMENT1_BASE 0x210b0
#define SEGMENT1_BIT_CLEARING_EDGE_REGISTER 0
#define SEGMENT1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEGMENT1_CAPTURE 0
#define SEGMENT1_DATA_WIDTH 7
#define SEGMENT1_DO_TEST_BENCH_WIRING 0
#define SEGMENT1_DRIVEN_SIM_VALUE 0
#define SEGMENT1_EDGE_TYPE "NONE"
#define SEGMENT1_FREQ 50000000
#define SEGMENT1_HAS_IN 0
#define SEGMENT1_HAS_OUT 1
#define SEGMENT1_HAS_TRI 0
#define SEGMENT1_IRQ -1
#define SEGMENT1_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SEGMENT1_IRQ_TYPE "NONE"
#define SEGMENT1_NAME "/dev/SEGMENT1"
#define SEGMENT1_RESET_VALUE 0
#define SEGMENT1_SPAN 16
#define SEGMENT1_TYPE "altera_avalon_pio"


/*
 * SEGMENT2 configuration
 *
 */

#define ALT_MODULE_CLASS_SEGMENT2 altera_avalon_pio
#define SEGMENT2_BASE 0x21080
#define SEGMENT2_BIT_CLEARING_EDGE_REGISTER 0
#define SEGMENT2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEGMENT2_CAPTURE 0
#define SEGMENT2_DATA_WIDTH 7
#define SEGMENT2_DO_TEST_BENCH_WIRING 0
#define SEGMENT2_DRIVEN_SIM_VALUE 0
#define SEGMENT2_EDGE_TYPE "NONE"
#define SEGMENT2_FREQ 50000000
#define SEGMENT2_HAS_IN 0
#define SEGMENT2_HAS_OUT 1
#define SEGMENT2_HAS_TRI 0
#define SEGMENT2_IRQ -1
#define SEGMENT2_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SEGMENT2_IRQ_TYPE "NONE"
#define SEGMENT2_NAME "/dev/SEGMENT2"
#define SEGMENT2_RESET_VALUE 0
#define SEGMENT2_SPAN 16
#define SEGMENT2_TYPE "altera_avalon_pio"


/*
 * SEGMENT3 configuration
 *
 */

#define ALT_MODULE_CLASS_SEGMENT3 altera_avalon_pio
#define SEGMENT3_BASE 0x21090
#define SEGMENT3_BIT_CLEARING_EDGE_REGISTER 0
#define SEGMENT3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEGMENT3_CAPTURE 0
#define SEGMENT3_DATA_WIDTH 7
#define SEGMENT3_DO_TEST_BENCH_WIRING 0
#define SEGMENT3_DRIVEN_SIM_VALUE 0
#define SEGMENT3_EDGE_TYPE "NONE"
#define SEGMENT3_FREQ 50000000
#define SEGMENT3_HAS_IN 0
#define SEGMENT3_HAS_OUT 1
#define SEGMENT3_HAS_TRI 0
#define SEGMENT3_IRQ -1
#define SEGMENT3_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SEGMENT3_IRQ_TYPE "NONE"
#define SEGMENT3_NAME "/dev/SEGMENT3"
#define SEGMENT3_RESET_VALUE 0
#define SEGMENT3_SPAN 16
#define SEGMENT3_TYPE "altera_avalon_pio"


/*
 * SEGMENT4 configuration
 *
 */

#define ALT_MODULE_CLASS_SEGMENT4 altera_avalon_pio
#define SEGMENT4_BASE 0x210a0
#define SEGMENT4_BIT_CLEARING_EDGE_REGISTER 0
#define SEGMENT4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEGMENT4_CAPTURE 0
#define SEGMENT4_DATA_WIDTH 7
#define SEGMENT4_DO_TEST_BENCH_WIRING 0
#define SEGMENT4_DRIVEN_SIM_VALUE 0
#define SEGMENT4_EDGE_TYPE "NONE"
#define SEGMENT4_FREQ 50000000
#define SEGMENT4_HAS_IN 0
#define SEGMENT4_HAS_OUT 1
#define SEGMENT4_HAS_TRI 0
#define SEGMENT4_IRQ -1
#define SEGMENT4_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SEGMENT4_IRQ_TYPE "NONE"
#define SEGMENT4_NAME "/dev/SEGMENT4"
#define SEGMENT4_RESET_VALUE 0
#define SEGMENT4_SPAN 16
#define SEGMENT4_TYPE "altera_avalon_pio"


/*
 * System configuration
 *
 */

#define ALT_DEVICE_FAMILY "Cyclone V"
#define ALT_ENHANCED_INTERRUPT_API_PRESENT
#define ALT_IRQ_BASE NULL
#define ALT_LOG_PORT "/dev/null"
#define ALT_LOG_PORT_BASE 0x0
#define ALT_LOG_PORT_DEV null
#define ALT_LOG_PORT_TYPE ""
#define ALT_NUM_EXTERNAL_INTERRUPT_CONTROLLERS 0
#define ALT_NUM_INTERNAL_INTERRUPT_CONTROLLERS 1
#define ALT_NUM_INTERRUPT_CONTROLLERS 1
#define ALT_STDERR "/dev/JTAG"
#define ALT_STDERR_BASE 0x210c8
#define ALT_STDERR_DEV JTAG
#define ALT_STDERR_IS_JTAG_UART
#define ALT_STDERR_PRESENT
#define ALT_STDERR_TYPE "altera_avalon_jtag_uart"
#define ALT_STDIN "/dev/JTAG"
#define ALT_STDIN_BASE 0x210c8
#define ALT_STDIN_DEV JTAG
#define ALT_STDIN_IS_JTAG_UART
#define ALT_STDIN_PRESENT
#define ALT_STDIN_TYPE "altera_avalon_jtag_uart"
#define ALT_STDOUT "/dev/JTAG"
#define ALT_STDOUT_BASE 0x210c8
#define ALT_STDOUT_DEV JTAG
#define ALT_STDOUT_IS_JTAG_UART
#define ALT_STDOUT_PRESENT
#define ALT_STDOUT_TYPE "altera_avalon_jtag_uart"
#define ALT_SYSTEM_NAME "AlarmClockHDL"


/*
 * TIMER configuration
 *
 */

#define ALT_MODULE_CLASS_TIMER altera_avalon_timer
#define TIMER_ALWAYS_RUN 0
#define TIMER_BASE 0x21000
#define TIMER_COUNTER_SIZE 32
#define TIMER_FIXED_PERIOD 0
#define TIMER_FREQ 50000000
#define TIMER_IRQ 1
#define TIMER_IRQ_INTERRUPT_CONTROLLER_ID 0
#define TIMER_LOAD_VALUE 12499999
#define TIMER_MULT 0.001
#define TIMER_NAME "/dev/TIMER"
#define TIMER_PERIOD 250
#define TIMER_PERIOD_UNITS "ms"
#define TIMER_RESET_OUTPUT 0
#define TIMER_SNAPSHOT 1
#define TIMER_SPAN 32
#define TIMER_TICKS_PER_SEC 4
#define TIMER_TIMEOUT_PULSE_OUTPUT 0
#define TIMER_TYPE "altera_avalon_timer"


/*
 * hal configuration
 *
 */

#define ALT_INCLUDE_INSTRUCTION_RELATED_EXCEPTION_API
#define ALT_MAX_FD 4
#define ALT_SYS_CLK none
#define ALT_TIMESTAMP_CLK none

#endif /* __SYSTEM_H_ */
